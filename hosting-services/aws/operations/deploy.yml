- name: Build Operations server
  hosts: all
  user: ec2-user
  become: yes
  gather_facts: true

  pre_tasks:
    - set_fact:
        workspace: "/opt/sepal/"

    # bash prompt
    - name: Set bash prompt
      blockinfile:
        path: /etc/profile
        block: |
          # Bash prompt
          PS1="{{ lookup('env', 'BASH_PROMPT') }}"

    # set locale
    - name: Set locale
      lineinfile:
        path: /etc/environment
        line: "{{ item }}"
      with_items:
        - "LANG=en_US.utf-8"
        - "LC_ALL=en_US.utf-8"

    # increase max_map_count to prevent out of memory errors
    - name: Increase max_map_count
      lineinfile:
        path: /etc/sysctl.conf
        line: "{{ item }}"
      with_items:
        - "vm.max_map_count=1048576"

    - name: Create filesystem on /var/lib/docker volume
      filesystem:
        fstype: xfs
        dev: /dev/sdb

    - name: Mount Docker volume
      mount:
        path: /var/lib/docker
        src: /dev/sdb
        fstype: xfs
        state: mounted

    - name: Create docker-registry certificate dir
      file:
        path: "/etc/docker/certs.d/{{ lookup('env', 'DOCKER_REGISTRY_HOST') }}"
        state: directory

    - name: Copy docker-registry certificate
      copy:
        src: "{{ CONFIG_HOME }}/certificates/docker-registry.crt"
        dest: "/etc/docker/certs.d/{{ lookup('env', 'DOCKER_REGISTRY_HOST') }}/ca.crt"

    - name: Install docker
      command: "amazon-linux-extras install docker -y"

    - name: pip install urllib3
      pip:
        name: urllib3==1.26.18
        executable: pip3

    - name: pip install requests
      pip:
        name: requests
        executable: pip3

    - file: path="/usr/local/lib/docker/cli-plugins" state=directory
    - uri:
        url: https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64
        dest: /usr/local/lib/docker/cli-plugins/docker-compose
        mode: +x
        status_code: [200, 304]

    - name: Copy /etc/docker/daemon.json
      copy: src=docker/main-daemon.json dest=/etc/docker/daemon.json

    - name: Add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker

    - name: Enable docker
      systemd:
        name: docker
        state: started
        enabled: yes
        masked: no

    - docker_network: name=sepal
    
    - name: Create /etc/sepal
      file:
        path: /etc/sepal
        state: directory

    - name: Copy env file to /etc/sepal/env
      copy:
        src: "{{ env_file }}"
        dest: "/etc/sepal/env"

  roles:
    # - { role: live-patching }
    # - { role: build-module, module: haproxy-acme }
    # - { role: build-module, module: ops }
    - { role: run-module, module: ops }
