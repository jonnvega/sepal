- name: Deploy on Vagrant box
  hosts: all
  user: vagrant
  become: yes
  gather_facts: true

  vars_files:
    - "{{ secret_vars_file }}"

  pre_tasks:
    - set_fact:
        ldap_host: "{{ vagrant_ip }}"
        hosting_service: "vagrant"
        syslog_address: "udp://172.17.0.1"
        workspace: "/opt/sepal/"

    - name: Create docker-registry certificate dir
      file:
        path: "/etc/docker/certs.d/{{ docker_repository_host }}"
        state: directory
    - name: Copy docker-registry certificate
      copy:
        src: "{{ config_home }}/certificates/docker-registry.crt"
        dest: "/etc/docker/certs.d/{{ docker_repository_host }}/ca.crt"

    - file: path="/data/sepal/etc" state=directory
    - template: src="./vagrant.properties" dest=/data/sepal/etc/vagrant.properties

    - file: path="/data/letsencrypt/live/{{ sepal_host }}" state=directory
    - copy: src="{{ config_home }}/certificates/sepal-https.key" dest=/data/letsencrypt/live/{{ sepal_host }}/privkey.pem
    - copy: src="{{ config_home }}/certificates/sepal-https.crt" dest=/data/letsencrypt/live/{{ sepal_host }}/fullchain.pem

    - name: Install EPEL
      yum:
        name: epel-release

    # rsyslog
    - name: Copy rsyslog.conf
      template: src="rsyslog.conf" dest=/etc/rsyslog.conf

    - file: path="/etc/rsyslog.d" state=directory
    - name: Copy rsyslog.d
      synchronize: src="rsyslog.d" dest=/etc/

    - name: Start rsyslog
      service: name=rsyslog state=started

    # Docker
    - name: Add docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docer-ce.repo
      become: yes

    - name: Enable docker repo
      ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: 'docker-ce-edge'
        option: enabled
        value: 0
      become: yes

    - name: Install docker
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - docker-ce
          - python-pip

    - name: Install docker-compose
      pip:
        name: docker-compose

    - name: Create /etc/docker
      file:
        path: "/etc/docker"
        state: directory

    - name: Copy /etc/docker/daemon.json
      copy: src=docker/daemon.json dest=/etc/docker/daemon.json

    - name: Create /etc/systemd/system/docker.service.d
      file:
        path: "/etc/systemd/system/docker.service.d"
        state: directory
    - name: Copy /etc/systemd/system/docker.service.d/docker.conf
      copy: src=docker/docker.conf dest=/etc/systemd/system/docker.service.d/docker.conf

    - name: Ensure group docker exists
      group:
        name: docker
        state: present

    - name: Add users to docker group
      user:
        name: vagrant
        groups: docker



    - name: Enable docker
      systemd:
        name: docker
        state: started
        enabled: yes
        masked: no


  post_tasks:
    - name: docker system prune
      shell: echo y | docker system prune

  roles:
    - { role: build-module, module: backup }
    - { role: build-module, module: letsencrypt }
    - { role: build-module, module: java }
    - { role: build-module, module: ldap }
    - { role: build-module, module: ldap-backup }
    - { role: build-module, module: haproxy }
    - { role: build-module, module: mysql }
    - { role: build-module, module: mysql-backup }
    - { role: build-module, module: gateway }
    - { role: build-module, module: terminal }
    - { role: build-module, module: ssh-gateway }
    - { role: build-module, module: geospatial-toolkit }
    - { role: build-module, module: sandbox }
    - { role: build-module, module: user }
    - { role: build-module, module: user-storage }
    - { role: build-module, module: user-storage-backup }
    - { role: build-module, module: sepal-server }
    - { role: build-module, module: user-files }
    - { role: build-module, module: gui }
    - { role: build-module, module: ceo-gateway }
    - { role: build-module, module: app-manager }
    - { role: build-module, module: task }
    - { role: build-module, module: gee }
    - { role: build-module, module: rabbitmq }

    - { role: run-module, module: backup }
    - { role: run-module, module: rabbitmq }
    - { role: run-module, module: email }
    - { role: run-module, module: ldap }
    - { role: run-module, module: ldap-backup }
    - { role: run-module, module: mysql }
    - { role: run-module, module: mysql-backup }
    - { role: run-module, module: gee }
    - { role: run-module, module: user }
    - { role: run-module, module: user-storage }
    - { role: run-module, module: user-storage-backup }
    - { role: run-module, module: app-manager }
    - { role: run-module, module: sepal-server, container_name: sepal }
    - { role: run-module, module: user-files }
    - { role: run-module, module: gui }
    - { role: run-module, module: ceo-gateway }
    - { role: run-module, module: ssh-gateway }
    - { role: run-module, module: terminal }
    - { role: run-module, module: gateway }
    - { role: run-module, module: letsencrypt }
    - { role: run-module, module: haproxy }
    - { role: run-module, module: sys-monitor }
