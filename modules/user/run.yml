---
- file: path="/data/user" state=directory
- file: path="/data/user/certificates" state=directory
- copy: src="{{ config_home }}/certificates/ldap-ca.crt.pem" dest=/data/user/certificates/ldap-ca.crt.pem

- file: path="/data/user/module_initialized" state=absent

- name: "user | Start container"
  docker_container:
    container_default_behavior: "{{ container_default_behavior }}"
    api_version: "{{ api_version }}"
    name: "{{ name }}"
    pull: "{{ pull }}"
    image: "{{ image }}"
    state: "{{ state }}"
    restart_policy: "{{ restart_policy }}"
    network_mode: "{{ network_mode }}"
    networks:
      - name: 'sepal'
    volumes:
    - "/data/user:/data"
    - "/data/sepal/home:/sepal/home" # User data dir, to setup initial structure/remove when user is deleted
    env:
      SEPAL_ADMIN_PASSWORD: "{{ sepal_machine_admin_password }}"
      SEPAL_ADMIN_WEB_PASSWORD: "{{ sepal_admin_user_password }}"
      SEPAL_HOST: "{{ sepal_host }}"
      LDAP_HOST: "{{ ldap_host }}"
      LDAP_ADMIN_PASSWORD: "{{ ldap_admin_password }}"
      MYSQL_PASSWORD: "{{ mysql_password }}"
      MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
      SMTP_FROM: "{{ smtp_from }}"
      SMTP_HOST: "{{ smtp_host }}"
      SMTP_PORT: "{{ smtp_port }}"
      SMTP_USERNAME: "{{ smtp_username }}"
      SMTP_PASSWORD: "{{ smtp_password }}"
      GOOGLE_OAUTH_CLIENT_ID: "{{ google_oauth_client_id }}"
      GOOGLE_OAUTH_CLIENT_SECRET: "{{ google_oauth_client_secret }}"
  register: container

# Check is container is started/restarted by checking if container start time changed after executing the
# docker_container task.  Cannot use the container.changed, since it always return true when image is pulled
# https://github.com/ansible/ansible/issues/19549
- name: "Checking start time of {{ container_name | default(module) }}"
  script: "start_time.sh {{ container_name | default(module) }}"
  register: new_start_time

- set_fact:
   new_start_time: "{{ new_start_time.stdout | regex_replace('[\\r\\n]+', '') }}"

- name: "user | Wait until initialized"
  wait_for: path=/data/user/module_initialized
  when: new_start_time != start_timestamp

