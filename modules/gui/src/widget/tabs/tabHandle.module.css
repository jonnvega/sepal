.tab {
    --tab-default-background-color: hsl(0, 0%, 11%);
    --tab-selected-background-color: hsl(60, 2%, 16%);
    --tab-default-background-color-transparent: hsla(0, 0%, 11%, 0);
    --tab-selected-background-color-transparent: hsla(60, 2%, 16%, 0);
    --tab-default-border-color: hsl(0, 0%, 30%);
    --tab-selected-border-color: hsl(var(--selected-hue), var(--selected-sat), 40%);
    --border-top-right-radius: .5rem;
    --tab-spacing: .3rem;
    --tab-min-width: 8.5rem;
    --tab-max-width: 17rem;
    --close-animation-duration: 0;
    /* [HACK] transparent colors are needed and cannot be replaced with 'transparent' because of iOS */
    --default-gradient: linear-gradient(to right, var(--tab-default-background-color-transparent), var(--tab-default-background-color) 100%);
    --selected-gradient: linear-gradient(to right, var(--tab-selected-background-color-transparent), var(--tab-selected-background-color) 100%);
    position: relative;
    background-color: var(--tab-default-background-color);
    border-top-right-radius: var(--border-top-right-radius);
    border-top-left-radius: .5rem;
    margin-top: .5rem;
    margin-bottom: 1px;
    padding: 0 .25rem .25rem .25rem;
    transform-origin: right top;
    overflow: hidden;
    animation: add 200ms linear forwards;
}

.tab::before {
    content: '';
    position: absolute;
    z-index: 1;
    bottom: 0;
    left: 0;
    right: 0;
    height: 3px;
    background-color: var(--tab-default-border-color);
}

.tab.busy::before {
    animation: flip-flop 1000ms cubic-bezier(1, 0, 0, 1) infinite alternate;
}

@keyframes flip-flop {
    0% {
        left: 0%;
        right: 50%;
    }
    100% {
        left: 50%;
        right: 0%;
    }
}

.tab.closing {
    animation: remove var(--close-animation-duration) ease-in forwards;
}

@keyframes add {
    0% {
        opacity: 0;
        transform: translateY(-100%);
    }
    100% {
        opacity: 1;
        transform: none;
    }
}

@keyframes remove {
    100% {
        opacity: 0;
        transform: translateX(50%);
    }
}

.tab:first-child {
    /* align tabs to the right */
    margin-left: auto; 
}

.tab:not(:last-child) {
    margin-right: var(--tab-spacing);
}

.tab.regular {
    max-width: var(--tab-max-width);
    min-width: var(--tab-min-width);
}

.tab.regular.selected {
    background-color: var(--tab-selected-background-color);
}

.tab.regular.selected::before {
    background-color: var(--tab-selected-border-color);
}

.tab:hover {
    background-color: var(--tab-default-background-color);
}

.tab .title {
    position: relative;
    flex-grow: 1;
}

.tab .title input {
    font-family: Source Sans Pro, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-weight: 600;
    color: #8a949c;
}

.tab.selected .title input {
    color: #e8e8e8;
}

/*Fade-out overflow */
.tab:not(.editing) .title:before {
    content: '';
    width: 2rem;
    height: 100%;
    position: absolute;
    right: 0;
    top: 0;
    background: var(--default-gradient);
    z-index: 1;
    pointer-events: none;
}

.tab.selected:not(.editing) .title:before {
    background: var(--selected-gradient);
}
